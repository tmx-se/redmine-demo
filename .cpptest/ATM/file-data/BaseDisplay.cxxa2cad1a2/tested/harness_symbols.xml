<?xml version="1.0" encoding="UTF-8"?>
<Symbols version="2.0">
    <TranslationUnitId>3595277452_11540_3921588544</TranslationUnitId>
    <HasCoverageInfo>true</HasCoverageInfo>
    <File name="C:\Parasoft_Tutorial\workspace_tutorial_tantai\ATM\BaseDisplay.cxx" id="1"/>
    <Function id="_ZN11BaseDisplay14showInfoToUserEPKc" name="LBaseDisplayZOshowInfoToUserFXPKcZ" decorated_name="virtual void BaseDisplay::showInfoToUser(const char *)" sorted_name="BaseDisplay::showInfoToUser">
      <definition type="orig" source="code" file_id="1" line="6" col="19"/>
    </Function>
    <Function id="_ZN11BaseDisplay11showBalanceEd" name="LBaseDisplayZLshowBalanceFXdZ" decorated_name="virtual void BaseDisplay::showBalance(double)" sorted_name="BaseDisplay::showBalance">
      <definition type="orig" source="code" file_id="1" line="14" col="19"/>
    </Function>
    <Function id="_ZNKSt5ctypeIcE13_M_widen_initEv" name="DstdTFctypecZZN_M_widen_initKFXvZ" decorated_name="void std::ctype&lt;char&gt;::_M_widen_init(void) const" sorted_name="std::ctype&lt;char&gt;::_M_widen_init" needed="true">
      <stub_declaration complete="true">
         <declaration_prefix>void (::std::ctype&lt; char&gt; ::</declaration_prefix>
         <declaration_suffix>_Stub__M_widen_init) (void)  const</declaration_suffix>
         <trigger_name>ctype::_M_widen_init</trigger_name>
         <trigger_call>CPPTEST_ACTUAL_CALL(&quot;ctype::_M_widen_init&quot;)-&gt;WithPtrArg(&quot;this&quot;, this, tgr_void_type())-&gt;WithRefArg(&quot;__callOrig&quot;, &amp;__callOrig, tgr_int_type())-&gt;End()</trigger_call>
         <post_trigger_call>CPPTEST_ACTUAL_AFTER_CALL(&quot;ctype::_M_widen_init&quot;)-&gt;WithPtrArg(&quot;this&quot;, this, tgr_void_type())-&gt;End()</post_trigger_call>
         <orig_call>_M_widen_init()</orig_call>
         <system_decl_header>bits\locale_facets.h</system_decl_header>
      </stub_declaration>
    </Function>
    <Function id="_ZNSt8ios_base4InitC9Ev" name="DstdIios_baseEInitZ0FXvZ" decorated_name="std::ios_base::Init::Init(void)" sorted_name="std::ios_base::Init::Init" needed="true">
      <stub_declaration complete="true">
         <declaration_prefix> ::std::ios_base::Init::Init (::</declaration_prefix>
         <declaration_suffix>_Dummy __CPTR_stub_ctor_param) </declaration_suffix>
         <trigger_name>Init::Init</trigger_name>
         <trigger_call>CPPTEST_ACTUAL_CALL(&quot;Init::Init&quot;)-&gt;WithPtrArg(&quot;this&quot;, this, tgr_void_type())-&gt;End()</trigger_call>
         <post_trigger_call>CPPTEST_ACTUAL_AFTER_CALL(&quot;Init::Init&quot;)-&gt;WithPtrArg(&quot;this&quot;, this, tgr_void_type())-&gt;End()</post_trigger_call>
         <system_decl_header>bits\ios_base.h</system_decl_header>
      </stub_declaration>
    </Function>
    <Function id="_ZNSt8ios_base4InitD9Ev" name="DstdIios_baseEInitZ1FXvZ" decorated_name="std::ios_base::Init::~Init(void)" sorted_name="std::ios_base::Init::~Init" needed="true">
      <stub_declaration complete="true">
         <declaration_prefix>void (::std::ios_base::Init::</declaration_prefix>
         <declaration_suffix>_Stub_destructor) (void) </declaration_suffix>
         <trigger_name>Init::~Init</trigger_name>
         <trigger_call>CPPTEST_ACTUAL_CALL(&quot;Init::~Init&quot;)-&gt;WithPtrArg(&quot;this&quot;, this, tgr_void_type())-&gt;WithRefArg(&quot;__callOrig&quot;, &amp;__callOrig, tgr_int_type())-&gt;End()</trigger_call>
         <post_trigger_call>CPPTEST_ACTUAL_AFTER_CALL(&quot;Init::~Init&quot;)-&gt;WithPtrArg(&quot;this&quot;, this, tgr_void_type())-&gt;End()</post_trigger_call>
         <orig_call>ios_base::Init::~Init()</orig_call>
         <system_decl_header>bits\ios_base.h</system_decl_header>
      </stub_declaration>
    </Function>
    <Function id="_ZSt16__throw_bad_castv" name="DstdZbA__throw_bad_castFXvZ" decorated_name="void std::__throw_bad_cast(void)" sorted_name="std::__throw_bad_cast" needed="true">
      <stub_declaration complete="true">
         <declaration_prefix>void </declaration_prefix>
         <declaration_suffix>_Stub___throw_bad_cast (void) </declaration_suffix>
         <orig_declaration>void __throw_bad_cast () </orig_declaration>
         <trigger_name>std::__throw_bad_cast</trigger_name>
         <trigger_call>CPPTEST_ACTUAL_CALL(&quot;std::__throw_bad_cast&quot;)-&gt;WithRefArg(&quot;__callOrig&quot;, &amp;__callOrig, tgr_int_type())-&gt;End()</trigger_call>
         <post_trigger_call>CPPTEST_ACTUAL_AFTER_CALL(&quot;std::__throw_bad_cast&quot;)-&gt;End()</post_trigger_call>
         <orig_call>__throw_bad_cast()</orig_call>
         <namespace type="vector">
           <value>std</value>
         </namespace>
      </stub_declaration>
    </Function>
</Symbols>

